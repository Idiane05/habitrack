client:  docker build -t habitrack-client .

       testing;  docker run -p 80:80 habitrack-client 

and then navigate to http://localhost

server:  docker build -t habitrack-server .
         
        testing;  docker run -p 5000:5000 habitrack-server

and then navigate  to http://localhost:5001/api/habits

AZURE;
1.
PS C:\Users\Administrator\Documents\GitHub\habitrack> az group create --name habitrack-rg --location eastus                                  
{
  "id": "/subscriptions/85b01857-a437-4a69-8f7d-313bed36954c/resourceGroups/habitrack-rg",
  "location": "eastus",
  "managedBy": null,
  "name": "habitrack-rg",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": null,
  "type": "Microsoft.Resources/resourceGroups" 
}

2.
PS C:\Users\Administrator\Documents\GitHub\habitrack> az acr create --resource-group habitrack-rg --name habitrack123 --sku Basic
{
  "adminUserEnabled": false,
  "anonymousPullEnabled": false,
  "autoGeneratedDomainNameLabelScope": "Unsecure",
  "creationDate": "2025-08-05T17:47:39.941211+00:00",
  "dataEndpointEnabled": false,
  "dataEndpointHostNames": [],
  "encryption": {
    "keyVaultProperties": null,
    "status": "disabled"
  },
  "id": "/subscriptions/85b01857-a437-4a69-8f7d-313bed36954c/resourceGroups/habitrack-rg/providers/Microsoft.ContainerRegistry/registries/habitrack123",
  "identity": null,
  "location": "eastus",
  "loginServer": "habitrack123.azurecr.io",    
  "metadataSearch": "Disabled",
  "name": "habitrack123",
  "networkRuleBypassOptions": "AzureServices", 
  "networkRuleSet": null,
  "policies": {
    "azureAdAuthenticationAsArmPolicy": {      
      "status": "enabled"
    },
    "exportPolicy": {
      "status": "enabled"
    },
    "quarantinePolicy": {
      "status": "disabled"
    },
    "retentionPolicy": {
      "days": 7,
      "lastUpdatedTime": "2025-08-05T17:47:48.735386+00:00",
      "status": "disabled"
    },
    "softDeletePolicy": {
      "lastUpdatedTime": "2025-08-05T17:47:48.735426+00:00",
      "retentionDays": 7,
      "status": "disabled"
    },
    "trustPolicy": {
      "status": "disabled",
      "type": "Notary"
    }
  },
  "privateEndpointConnections": [],
  "provisioningState": "Succeeded",
  "publicNetworkAccess": "Enabled",
  "resourceGroup": "habitrack-rg",
  "roleAssignmentMode": "LegacyRegistryPermissions",
  "sku": {
    "name": "Basic",
    "tier": "Basic"
  },
  "status": null,
  "systemData": {
    "createdAt": "2025-08-05T17:47:39.941211+00:00",
    "createdBy": "dianeingabire96@gmail.com",  
    "createdByType": "User",
    "lastModifiedAt": "2025-08-05T17:47:39.941211+00:00",
    "lastModifiedBy": "dianeingabire96@gmail.com",
    "lastModifiedByType": "User"
  },
  "tags": {},
  "type": "Microsoft.ContainerRegistry/registries",
  "zoneRedundancy": "Disabled"
}

3.
Log in to your ACR
   az acr login --name habitrack123

4. Tag your images:

bash

docker tag habitrack-client habitrack123.azurecr.io/habitrack-client:v1
docker tag habitrack-server habitrack123.azurecr.io/habitrack-server:v1

5. Push your images to ACR
bash

docker push habitrack123.azurecr.io/habitrack-client:v1
docker push habitrack123.azurecr.io/habitrack-server:v1

